service: ecofriendly-backend
frameworkVersion: "4"

provider:
  name: aws
  runtime: python3.11
  stage: local
  region: us-east-1
  environment:
    CONFIG_PATH: "${self:service}/config.ini"

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-offline

custom:
  wsgi:
    app: src.app.app
    packRequirements: false

  pythonRequirements:
    dockerizePip: true

  serverless-offline:
    httpPort: 5005

functions:
  login:
    handler: src/handlers/login_handler.handler
    events:
      - http:
          path: login
          method: post
          cors: false

  getEmployees:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: getEmployees
          method: get
          cors: true

  addEmployee:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: addEmployees
          method: post
          cors: true

  deleteEmployee:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: deleteEmployees/{identity}
          method: delete
          cors: true

  getVehicles:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: getVehicles
          method: get
          cors: true

  addVehicle:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: addVehicle
          method: post
          cors: true

  deleteVehicle:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: deleteVehicle/{licensePlate}
          method: delete
          cors: true

package:
  patterns:
    - "!node_modules/**"
    - "src/**"
    - "config.ini"
