service: ecofriendly-backend
frameworkVersion: "4"

provider:
  name: aws
  runtime: python3.11
  stage: local
  region: us-east-1
  environment:
    CONFIG_PATH: "${self:service}/config.ini"

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-offline

custom:
  wsgi:
    app: src.app.app
    packRequirements: false

  pythonRequirements:
    dockerizePip: true

  serverless-offline:
    httpPort: 5005

functions:
  login:
    handler: src/handlers/login_handler.handler
    events:
      - http:
          path: login
          method: post
          cors: false

  getEmployees:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: getEmployees
          method: get
          cors: true

  addEmployee:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: addEmployee
          method: post
          cors: true

  deleteEmployee:
    handler: src/handlers/employees_handler.handler
    events:
      - http:
          path: deleteEmployee/{identity}
          method: delete
          cors: true

  getVehicles:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: getVehicles
          method: get
          cors: true

  addVehicle:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: addVehicle
          method: post
          cors: true

  deleteVehicle:
    handler: src/handlers/vehicle_handler.handler
    events:
      - http:
          path: deleteVehicle/{licensePlate}
          method: delete
          cors: true
  
  getBins:
    handler: src/handlers/bins_handler.handler
    events:
      - http:
          path: getBins
          method: get
          cors: true

  addBin:
    handler: src/handlers/bins_handler.handler
    events:
      - http:
          path: addBin
          method: post
          cors: true

  deleteBin:
    handler: src/handlers/bins_handler.handler
    events:
      - http:
          path: deleteBin/{binId}
          method: delete
          cors: true
          
  updateBin:
    handler: src/handlers/bins_handler.handler
    events:
      - http:
          path: updateBin/{binId}
          method: put
          cors: true

  getShifts:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: getShifts
          method: get
          cors: true

  addShift:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: addShift
          method: post
          cors: true

  deleteShift:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: deleteShift/{shiftId}
          method: delete
          cors: true

  updateShift:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: updateShift/{shiftId}
          method: put
          cors: true

  proposeShift:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: proposeShift
          method: post
          cors: true
  
  getPendingProposals:
    handler: src/handlers/shifts_handler.handler
    events:
      - http:
          path: getPendingProposals
          method: get
          cors: true
  
  approveProposal:
    handler: src/handlers/shifts_handler.handler
    events:
      - http: 
          path: approveProposal/{proposalId}
          method: put 
          cors: true
  
  denyProposal:
    handler: src/handlers/shifts_handler.handler
    events:
      - http: 
          path: denyProposal/{proposalId}
          method: put
          cors: true

  getPayments:
    handler: src/handlers/payments_handler.handler
    events:
      - http:
          path: getPayments
          method: get
          cors: true

  addPayment:
    handler: src/handlers/payments_handler.handler
    events:
      - http:
          path: addPayment
          method: post
          cors: true
  
  updatePayment:
    handler: src/handlers/payments_handler.handler
    events:
      - http:
          path: updatePayment/{payment_id}
          method: put
          cors: true

  deletePayment:
    handler: src/handlers/payments_handler.handler
    events:
      - http:
          path: deletePayment/{payment_id}
          method: delete
          cors: true

  getMyPayments:
    handler: src/handlers/payments_handler.handler
    events:
      - http:
          path: getMyPayments/{worker_id}
          method: get
          cors: true
         
package:
  patterns:
    - "!node_modules/**"
    - "src/**"
    - "config.ini"
